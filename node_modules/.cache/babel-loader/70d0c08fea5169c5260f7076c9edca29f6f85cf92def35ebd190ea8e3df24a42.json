{"ast":null,"code":"// import React, { useState } from 'react';\n// import { Send, RefreshCw } from 'lucide-react';\n\n// const ChatBot = () => {\n//   const [messages, setMessages] = useState([]);\n//   const [input, setInput] = useState('');\n//   const [isLoading, setIsLoading] = useState(false);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!input.trim()) return;\n\n//     const userMessage = input;\n//     setInput('');\n//     setMessages(prev => [...prev, { type: 'user', text: userMessage }]);\n//     setIsLoading(true);\n\n//     try {\n//       const response = await fetch('http://localhost:8000/ask', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ text: userMessage }),\n//       });\n\n//       const data = await response.json();\n\n//       let botResponse;\n//       if (data.status === 'success') {\n//         botResponse = {\n//           type: 'bot',\n//           text: data.response.text,\n//           additional_info: data.response.additional_info\n//         };\n//       } else {\n//         botResponse = {\n//           type: 'bot',\n//           text: data.message,\n//         };\n//       }\n\n//       setMessages(prev => [...prev, botResponse]);\n//     } catch (error) {\n//       setMessages(prev => [...prev, {\n//         type: 'bot',\n//         text: 'Sorry, I encountered an error. Please try again.',\n//       }]);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"flex flex-col h-screen max-w-4xl mx-auto p-4\">\n//       <div className=\"bg-white shadow-lg rounded-lg p-6 flex-1 flex flex-col\">\n//         <h1 className=\"text-2xl font-bold mb-4\">CDP Support Assistant</h1>\n\n//         <div className=\"flex-1 overflow-y-auto mb-4 space-y-4\">\n//           {messages.map((message, index) => (\n//             <div\n//               key={index}\n//               className={`p-4 rounded-lg ${\n//                 message.type === 'user'\n//                   ? 'bg-blue-100 ml-auto max-w-[80%]'\n//                   : 'bg-gray-100 mr-auto max-w-[80%]'\n//               }`}\n//             >\n//               <div className=\"whitespace-pre-wrap\">{message.text}</div>\n//               {message.additional_info && (\n//                 <div className=\"mt-4 text-sm text-gray-600\">\n//                   <p className=\"font-semibold\">{message.additional_info.title}</p>\n//                   <p>Platform: {message.additional_info.platform}</p>\n//                   <a\n//                     href={message.additional_info.url}\n//                     target=\"_blank\"\n//                     rel=\"noopener noreferrer\"\n//                     className=\"text-blue-600 hover:underline inline-block mt-1\"\n//                   >\n//                     View Full Documentation →\n//                   </a>\n//                 </div>\n//               )}\n//             </div>\n//           ))}\n//           {isLoading && (\n//             <div className=\"flex items-center justify-center\">\n//               <RefreshCw className=\"animate-spin h-6 w-6 text-gray-500\" />\n//             </div>\n//           )}\n//         </div>\n\n//         <form onSubmit={handleSubmit} className=\"flex gap-2\">\n//           <input\n//             type=\"text\"\n//             value={input}\n//             onChange={(e) => setInput(e.target.value)}\n//             placeholder=\"Ask a question about Segment, mParticle, Lytics, or Zeotap...\"\n//             className=\"flex-1 p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n//           />\n//           <button\n//             type=\"submit\"\n//             disabled={isLoading}\n//             className=\"bg-blue-500 text-white p-2 rounded-lg hover:bg-blue-600 disabled:bg-gray-400\"\n//           >\n//             <Send className=\"h-5 w-5\" />\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ChatBot;","map":{"version":3,"names":[],"sources":["C:/Users/Aman Kumar/OneDrive/Desktop/cdpApp/frontend/src/components/ChatBot.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { Send, RefreshCw } from 'lucide-react';\r\n\r\n// const ChatBot = () => {\r\n//   const [messages, setMessages] = useState([]);\r\n//   const [input, setInput] = useState('');\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!input.trim()) return;\r\n\r\n//     const userMessage = input;\r\n//     setInput('');\r\n//     setMessages(prev => [...prev, { type: 'user', text: userMessage }]);\r\n//     setIsLoading(true);\r\n\r\n//     try {\r\n//       const response = await fetch('http://localhost:8000/ask', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify({ text: userMessage }),\r\n//       });\r\n\r\n//       const data = await response.json();\r\n      \r\n//       let botResponse;\r\n//       if (data.status === 'success') {\r\n//         botResponse = {\r\n//           type: 'bot',\r\n//           text: data.response.text,\r\n//           additional_info: data.response.additional_info\r\n//         };\r\n//       } else {\r\n//         botResponse = {\r\n//           type: 'bot',\r\n//           text: data.message,\r\n//         };\r\n//       }\r\n\r\n//       setMessages(prev => [...prev, botResponse]);\r\n//     } catch (error) {\r\n//       setMessages(prev => [...prev, {\r\n//         type: 'bot',\r\n//         text: 'Sorry, I encountered an error. Please try again.',\r\n//       }]);\r\n//     } finally {\r\n//       setIsLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"flex flex-col h-screen max-w-4xl mx-auto p-4\">\r\n//       <div className=\"bg-white shadow-lg rounded-lg p-6 flex-1 flex flex-col\">\r\n//         <h1 className=\"text-2xl font-bold mb-4\">CDP Support Assistant</h1>\r\n        \r\n//         <div className=\"flex-1 overflow-y-auto mb-4 space-y-4\">\r\n//           {messages.map((message, index) => (\r\n//             <div\r\n//               key={index}\r\n//               className={`p-4 rounded-lg ${\r\n//                 message.type === 'user'\r\n//                   ? 'bg-blue-100 ml-auto max-w-[80%]'\r\n//                   : 'bg-gray-100 mr-auto max-w-[80%]'\r\n//               }`}\r\n//             >\r\n//               <div className=\"whitespace-pre-wrap\">{message.text}</div>\r\n//               {message.additional_info && (\r\n//                 <div className=\"mt-4 text-sm text-gray-600\">\r\n//                   <p className=\"font-semibold\">{message.additional_info.title}</p>\r\n//                   <p>Platform: {message.additional_info.platform}</p>\r\n//                   <a\r\n//                     href={message.additional_info.url}\r\n//                     target=\"_blank\"\r\n//                     rel=\"noopener noreferrer\"\r\n//                     className=\"text-blue-600 hover:underline inline-block mt-1\"\r\n//                   >\r\n//                     View Full Documentation →\r\n//                   </a>\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//           ))}\r\n//           {isLoading && (\r\n//             <div className=\"flex items-center justify-center\">\r\n//               <RefreshCw className=\"animate-spin h-6 w-6 text-gray-500\" />\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n\r\n//         <form onSubmit={handleSubmit} className=\"flex gap-2\">\r\n//           <input\r\n//             type=\"text\"\r\n//             value={input}\r\n//             onChange={(e) => setInput(e.target.value)}\r\n//             placeholder=\"Ask a question about Segment, mParticle, Lytics, or Zeotap...\"\r\n//             className=\"flex-1 p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n//           />\r\n//           <button\r\n//             type=\"submit\"\r\n//             disabled={isLoading}\r\n//             className=\"bg-blue-500 text-white p-2 rounded-lg hover:bg-blue-600 disabled:bg-gray-400\"\r\n//           >\r\n//             <Send className=\"h-5 w-5\" />\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ChatBot;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}